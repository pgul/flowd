dnl $Id$
dnl Process this file with autoconf to produce a configure script.
AC_INIT(flowd.c)

dnl Checks for programs.
AC_PROG_CC
AC_PATH_PROG(PERL, perl, perl)

CFLAGS=
dnl Checks for header files.

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.

AC_CHECK_FUNCS(inet_addr)
case x$ac_cv_func_inet_addr in
  xno)
    AC_MSG_CHECKING(for inet_addr in -lxnet)
    OLD_LIBS=$LIBS
    LIBS="$LIBS -lxnet"
    AC_TRY_LINK([#include <arpa/inet.h>],[inet_addr("");],
          AC_MSG_RESULT(yes), AC_MSG_RESULT(no); AC_ERROR(no inet_addr() found))
    ;;
esac

dnl Check for embedded perl
AC_ARG_WITH(perl,
            [  --with-perl             embedded perl support (default no)],
            do_perl=yes, do_perl=no)
case x$do_perl in
  xyes)
   AC_MSG_CHECKING(for libperl)
   PERLDIR=`$PERL -MConfig -e 'print $Config{archlib}' 2>/dev/null`
   if PERLCOPT=`$PERL -MExtUtils::Embed -e ccopts 2>/dev/null`
   then
     PERLLOPT=`$PERL -MExtUtils::Embed -e ldopts`
     case x$PERLDIR in
       x)
         AC_MSG_RESULT(yes)
         ;;
       *)
         AC_MSG_RESULT($PERLDIR)
         ;;
     esac
   else
     case x$PERLDIR in
       x)
         AC_MSG_RESULT(no)
         ;;
       *)
         PERLCOPT="-I $PERLDIR/CORE -Dbool=char -DHAS_BOOL"
         PERLLOPT="$PERLDIR/auto/DynaLoader/DynaLoader.a -L$PERLDIR/CORE -lperl -ldl -lcrypt -lm"
         AC_CHECK_LIB(dl, main, PERLLOPT="$PERLLOPT -ldl")
         AC_CHECK_LIB(crypt, main, PERLLOPT="$PERLLOPT -lcrypt")
         AC_CHECK_LIB(m, main, PERLLOPT="$PERLLOPT -lm")
         AC_CHECK_LIB(socket, main, PERLLOPT="$PERLLOPT -lsocket")
         AC_MSG_RESULT($PERLDIR)
         ;;
     esac
   fi
   case x$PERLCOPT in
     x)
       ;;
     *)
       AC_MSG_CHECKING(for working libperl)
       OLD_LIBS=$LIBS
       OLD_CFLAGS=$CFLAGS
       LIBS="$LIBS $PERLLOPT"
       CFLAGS="$CFLAGS $PERLCOPT"
       AC_TRY_LINK([
          #include <EXTERN.h>
          #include <perl.h>
          #include <XSUB.h>],[perl_alloc()],
        AC_DEFINE(DO_PERL) AC_MSG_RESULT(yes); WORKING_PERL=yes,
        AC_MSG_RESULT(no); CFLAGS=$OLD_CFLAGS; LIBS=$OLD_LIBS,
        AC_MSG_RESULT(cross-compiling. No assumptions made); CFLAGS=$OLD_CFLAGS; LIBS=$OLD_LIBS
       )
       ;;
   esac
   ;;
esac

dnl Check for MySQL
AC_ARG_WITH(mysql,
            [  --with-mysql            MySQL support (default no)],
            do_mysql=yes, do_mysql=no)
case x$do_mysql in
  xyes)
   AC_MSG_CHECKING(for mysql)
   OLD_CFLAGS=$CFLAGS
   OLD_LDFLAGS=$LDFLAGS
   OLD_LIBS=$LIBS
   CFLAGS="$CFLAGS -I /usr/local/include/mysql"
   AC_TRY_COMPILE([#include <mysql.h>], [], mysql_ok=yes, mysql_ok=no)
   case x$mysql_ok in
     xno)
      CFLAGS="$OLD_CFLAGS -I /usr/include/mysql"
      AC_TRY_COMPILE([#include <mysql.h>], [], mysql_ok=yes, mysql_ok=no)
      ;;
   esac
   case x$mysql_ok in
     xyes)
      LIBS="$LIBS -lmysqlclient"
      LDFLAGS="$LDFLAGS -L /usr/local/lib/mysql"
      AC_TRY_LINK([#include <mysql.h>], [mysql_init(0)],
                  mysql_ok=yes, mysql_ok=no)
      case x$mysql_ok in
        xno)
         LDFLAGS="$OLD_LDFLAGS -L /usr/lib/mysql"
         AC_TRY_LINK([#include <mysql.h>], [mysql_init(0)],
                     mysql_ok=yes, mysql_ok=no)
        ;;
      esac
      ;;
   esac
   case x$mysql_ok in
      xyes)
       AC_DEFINE(DO_MYSQL)
       AC_MSG_RESULT(yes)
       ;;
      xno)
       CFLAGS=$OLD_CFLAGS
       LDFLAGS=$OLD_LDFLAGS
       LIBS=$OLD_LIBS
       AC_MSG_RESULT(no)
       ;;
   esac
   ;;
esac

dnl Check for snmp
AC_ARG_WITH(snmp,
            [  --with-snmp             SNMP support (default yes)],
            do_snmp=yes, do_snmp=no)
case x$withval in
  xno)
    ;;
  *)
    AC_CHECK_FUNCS(strdup)
    AC_CHECK_HEADERS(stdarg.h ucd-snmp/snmp.h)
    OLD_CFLAGS=$CFLAGS
    case x$ac_cv_header_ucd_snmp_snmp_h in
      xyes)
        snmp_ok=yes
        ;;
      *)
        AC_MSG_CHECKING(if snmp.h is in /usr/local/include/ucd-snmp)
        CFLAGS="$CFLAGS -I /usr/local/include"
        AC_TRY_COMPILE([#include <sys/types.h>
                        #include <ucd-snmp/asn1.h>
                        #include <ucd-snmp/snmp.h>], [],
                        AC_MSG_RESULT(yes); snmp_ok=yes,
                        AC_MSG_RESULT(no); snmp_ok=no)
        case x$snmp_ok in
          xyes)
            AC_DEFINE(HAVE_UCD_SNMP_SNMP_H)
            ;;
          *)
            CFLAGS="$OLD_CFLAGS"
            case x$do_snmp in
              xyes)
                AC_MSG_WARN([ucd-snmp not found, SNMP support disabled])
                do_snmp=no
                ;;
            esac
            ;;
        esac
        ;;
    esac
    case x$snmp_ok in
      xyes)
        AC_MSG_CHECKING(for libsnmp)
        OLD_LIBS="$LIBS"
        LIBS="$LIBS -lsnmp -lcrypto"
        AC_TRY_LINK([],[snmp_sess_init()],
          AC_MSG_RESULT(yes), AC_MSG_RESULT(no); snmp_ok=no,
          AC_MSG_RESULT(cross-compiling. No assumptions made); snmp_ok=no)
        case x$snmp_ok in
          xno)
            AC_MSG_CHECKING(for libsnmp in /usr/local/lib)
            OLD_LDFLAGS="$LDFLAGS"
            LDFLAGS="$LDFLAGS -L/usr/local/lib"
            AC_TRY_LINK([],[snmp_sess_init()],
             AC_MSG_RESULT(yes); snmp_ok=yes, AC_MSG_RESULT(no),
             AC_MSG_RESULT(cross-compiling. No assumptions made))
            case x$snmp_ok in
              xno)
                case x$do_snmp in
                  xyes)
                    AC_MSG_WARN([ucd-snmp not found, SNMP support disabled])
                    do_snmp=no
                    ;;
                esac
                CFLAGS="$OLD_CFLAGS"
                LIBS="$OLD_LIBS"
                LDFLAGS="$OLD_LDFLAGS"
                ;;
            esac
            ;;
          esac
        ;;
    esac
    case x$snmp_ok in
      xyes)
        AC_DEFINE(DO_SNMP)
        ;;
    esac
  ;;
esac

dnl Set dirs
logdir=/var/log/flow
AC_ARG_WITH(logdir,
     [  --with-logdir=path      log files directory (default /var/log/flow)],
     [logdir=$withval], [])
AC_DEFINE_UNQUOTED(LOGDIR, "$logdir")

AC_ARG_WITH(debug,
     [  --with-debug            generate debug info],
     [AC_DEFINE(DEBUG) CFLAGS="$CFLAGS -g"], [CFLAGS="$CFLAGS -O3"])

dnl Set shmem params
nbits=2
maxprefix=24
AC_ARG_WITH(nbits,
     [  --with-nbits=NBITS      set number of bits for class of addr (2)],
     [nbits=$withval],[])
AC_ARG_WITH(minprefix,
     [  --with-maxprefix=LEN    set maximum prefix length (24)],
     [maxprefix=$withval],[])
[if echo $nbits | grep -q '[^0-9]' || [ $nbits -ne 1 -a $nbits -ne 2 -a $nbits -ne 4 -a $nbits -ne 8 -a $nbits -ne 16 ]]
then
	AC_ERROR(Incorrect nbits value $nbits, must be 1..16, power of 2)
fi
[if echo $maxprefix | grep -q '[^0-9]' || [ $maxprefix -gt 32 -o $maxprefix -lt 16 ]]
then
	AC_ERROR(Incorrect nbits value $nbits, must be 1..16, power of 2)
fi

AC_DEFINE_UNQUOTED(NBITS, $nbits)
AC_DEFINE_UNQUOTED(MAXPREFIX, $maxprefix)

AC_OUTPUT(Makefile)
